package com.uhc.ubh.arithmatic.calculation;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.0.1 2016-07-20T16:14:44.500+05:30
 * Generated source version: 3.0.1
 * 
 */
@WebServiceClient(name = "ArithmaticCalculationService", wsdlLocation = "file:/D:/Sandbox/Spring/ArithmeticTopDownMaven/src/main/resources/arithmaticService.wsdl", targetNamespace = "http://arithmatic.ubh.uhc.com/calculation/")
public class ArithmaticCalculationService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://arithmatic.ubh.uhc.com/calculation/",
            "ArithmaticCalculationService");
    public final static QName ArithmaticCalculationServicePort = new QName(
            "http://arithmatic.ubh.uhc.com/calculation/", "ArithmaticCalculationServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/Sandbox/Spring/ArithmeticTopDownMaven/src/main/resources/arithmaticService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ArithmaticCalculationService.class.getName()).log(
                    java.util.logging.Level.INFO, "Can not initialize the default wsdl from {0}",
                    "file:/D:/Sandbox/Spring/ArithmeticTopDownMaven/src/main/resources/arithmaticService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ArithmaticCalculationService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ArithmaticCalculationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ArithmaticCalculationService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * This constructor requires JAX-WS API 2.2. You will need to endorse the
     * 2.2 API jar or re-run wsdl2java with "-frontend jaxws21" to generate
     * JAX-WS 2.1 compliant code instead.
     * 
     */

    public ArithmaticCalculationService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ArithmaticCalculationService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ArithmaticCalculationService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return returns ArithmaticCalculationServicePort
     */
    @WebEndpoint(name = "ArithmaticCalculationServicePort")
    public ArithmaticCalculationServicePort getArithmaticCalculationServicePort() {
        return super.getPort(ArithmaticCalculationServicePort, ArithmaticCalculationServicePort.class);
    }

    /**
     * 
     * @param features
     *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
     *            on the proxy. Supported features not in the
     *            <code>features</code> parameter will have their default
     *            values.
     * @return returns ArithmaticCalculationServicePort
     */
    @WebEndpoint(name = "ArithmaticCalculationServicePort")
    public ArithmaticCalculationServicePort getArithmaticCalculationServicePort(WebServiceFeature... features) {
        return super.getPort(ArithmaticCalculationServicePort, ArithmaticCalculationServicePort.class, features);
    }

}
